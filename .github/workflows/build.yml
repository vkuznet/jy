name: Build

on:
  push:
    tags:
      - '*.*.*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.19

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      run: |
        echo "AMD64 build"
        make build_amd64;   mv jy jy_amd64

        echo "Darwin build"
        make build_darwin;  mv jy jy_darwin_amd64

        echo "Darwin build ARM"
        make build_darwin;  mv jy jy_darwin_arm64

        echo "Power8 build"
        make build_power8;  mv jy jy_power8

        echo "ARM64 build"
        make build_arm64;   mv jy jy_arm64

        echo "Windows build"
        make build_windows; mv jy jy.exe

        echo "Tar all builds"
        tar cfz jy.tar.gz jy_amd64 jy_darwin_amd64 jy_darwin_arm64 jy_power8 jy.exe

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload auth-proxy-tools
      id: upload-jy
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./jy.tar.gz
        asset_name: jy.tar.gz
        asset_content_type: application/octet-stream
